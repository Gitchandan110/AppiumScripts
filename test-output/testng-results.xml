<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" ignored="0" total="18" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="1871891" started-at="2020-08-04T12:17:14Z" finished-at="2020-08-04T12:48:26Z">
    <groups>
    </groups>
    <test name="SK_SafeWalk_Incident" duration-ms="137835" started-at="2020-08-04T12:17:14Z" finished-at="2020-08-04T12:19:31Z">
      <class name="com.appium.DeviceScripts.SK_SafeWalk_Incident">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_SafeWalk_Incident@2bbf4b8b]" name="launchSafetyKuvrr" is-config="true" duration-ms="27332" started-at="2020-08-04T12:17:14Z" finished-at="2020-08-04T12:17:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="loginApp()[pri:0, instance:com.appium.DeviceScripts.SK_SafeWalk_Incident@2bbf4b8b]" name="loginApp" is-config="true" duration-ms="32337" started-at="2020-08-04T12:17:41Z" finished-at="2020-08-04T12:18:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApp -->
        <test-method status="PASS" signature="testSafewalkIncident()[pri:0, instance:com.appium.DeviceScripts.SK_SafeWalk_Incident@2bbf4b8b]" name="testSafewalkIncident" duration-ms="77723" started-at="2020-08-04T12:18:13Z" finished-at="2020-08-04T12:19:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSafewalkIncident -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_SafeWalk_Incident@2bbf4b8b]" name="CloseApp" is-config="true" duration-ms="386" started-at="2020-08-04T12:19:31Z" finished-at="2020-08-04T12:19:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_SafeWalk_Incident -->
    </test> <!-- SK_SafeWalk_Incident -->
    <test name="SK_GroupCall" duration-ms="114628" started-at="2020-08-04T12:19:32Z" finished-at="2020-08-04T12:21:26Z">
      <class name="com.appium.DeviceScripts.SK_GroupCall">
        <test-method status="PASS" signature="launchApp()[pri:0, instance:com.appium.DeviceScripts.SK_GroupCall@2c039ac6]" name="launchApp" is-config="true" duration-ms="14617" started-at="2020-08-04T12:19:32Z" finished-at="2020-08-04T12:19:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="Login()[pri:0, instance:com.appium.DeviceScripts.SK_GroupCall@2c039ac6]" name="Login" is-config="true" duration-ms="9320" started-at="2020-08-04T12:19:46Z" finished-at="2020-08-04T12:19:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="GroupCall()[pri:0, instance:com.appium.DeviceScripts.SK_GroupCall@2c039ac6]" name="GroupCall" duration-ms="90265" started-at="2020-08-04T12:19:56Z" finished-at="2020-08-04T12:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GroupCall -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_GroupCall@2c039ac6]" name="CloseApp" is-config="true" duration-ms="419" started-at="2020-08-04T12:21:26Z" finished-at="2020-08-04T12:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_GroupCall -->
    </test> <!-- SK_GroupCall -->
    <test name="SK_SOS_Incident" duration-ms="119884" started-at="2020-08-04T12:21:26Z" finished-at="2020-08-04T12:23:26Z">
      <class name="com.appium.DeviceScripts.SK_SOS_Incident">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_SOS_Incident@23d2a7e8]" name="launchSafetyKuvrr" is-config="true" duration-ms="12466" started-at="2020-08-04T12:21:26Z" finished-at="2020-08-04T12:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="testSOSIncident()[pri:1, instance:com.appium.DeviceScripts.SK_SOS_Incident@23d2a7e8]" name="testSOSIncident" duration-ms="106884" started-at="2020-08-04T12:21:39Z" finished-at="2020-08-04T12:23:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSOSIncident -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_SOS_Incident@23d2a7e8]" name="CloseApp" is-config="true" duration-ms="525" started-at="2020-08-04T12:23:26Z" finished-at="2020-08-04T12:23:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_SOS_Incident -->
    </test> <!-- SK_SOS_Incident -->
    <test name="SK_Tips_NonAnonymous" duration-ms="207260" started-at="2020-08-04T12:23:26Z" finished-at="2020-08-04T12:26:53Z">
      <class name="com.appium.DeviceScripts.SK_Tips_NonAnonymous">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_Tips_NonAnonymous@45820e51]" name="launchSafetyKuvrr" is-config="true" duration-ms="16365" started-at="2020-08-04T12:23:26Z" finished-at="2020-08-04T12:23:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="testTips()[pri:0, instance:com.appium.DeviceScripts.SK_Tips_NonAnonymous@45820e51]" name="testTips" duration-ms="190223" started-at="2020-08-04T12:23:42Z" finished-at="2020-08-04T12:26:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTips -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_Tips_NonAnonymous@45820e51]" name="CloseApp" is-config="true" duration-ms="665" started-at="2020-08-04T12:26:53Z" finished-at="2020-08-04T12:26:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_Tips_NonAnonymous -->
    </test> <!-- SK_Tips_NonAnonymous -->
    <test name="SK_AudioLocation_Incident" duration-ms="167980" started-at="2020-08-04T12:26:53Z" finished-at="2020-08-04T12:29:41Z">
      <class name="com.appium.DeviceScripts.SK_AudioLocation_Incident">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_AudioLocation_Incident@5bcea91b]" name="launchSafetyKuvrr" is-config="true" duration-ms="19635" started-at="2020-08-04T12:26:53Z" finished-at="2020-08-04T12:27:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="verifyPhotoAudioIncident()[pri:0, instance:com.appium.DeviceScripts.SK_AudioLocation_Incident@5bcea91b]" name="verifyPhotoAudioIncident" duration-ms="148105" started-at="2020-08-04T12:27:13Z" finished-at="2020-08-04T12:29:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPhotoAudioIncident -->
        <test-method status="PASS" signature="Login()[pri:0, instance:com.appium.DeviceScripts.SK_AudioLocation_Incident@5bcea91b]" name="Login" is-config="true" duration-ms="0" started-at="2020-08-04T12:27:13Z" finished-at="2020-08-04T12:27:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_AudioLocation_Incident@5bcea91b]" name="CloseApp" is-config="true" duration-ms="234" started-at="2020-08-04T12:29:41Z" finished-at="2020-08-04T12:29:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_AudioLocation_Incident -->
    </test> <!-- SK_AudioLocation_Incident -->
    <test name="SK_VideoLocation_Incident" duration-ms="27751" started-at="2020-08-04T12:29:41Z" finished-at="2020-08-04T12:30:09Z">
      <class name="com.appium.DeviceScripts.SK_VideoLocation_Incident">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_VideoLocation_Incident@12f41634]" name="launchSafetyKuvrr" is-config="true" duration-ms="15811" started-at="2020-08-04T12:29:41Z" finished-at="2020-08-04T12:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="FAIL" signature="Login()[pri:0, instance:com.appium.DeviceScripts.SK_VideoLocation_Incident@12f41634]" name="Login" is-config="true" duration-ms="11919" started-at="2020-08-04T12:29:57Z" finished-at="2020-08-04T12:30:09Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: f4b7e9cb-0fca-4939-adfc-a35b9d00cf1e
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains("Event Options").instance(0))}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: f4b7e9cb-0fca-4939-adfc-a35b9d00cf1e
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains("Event Options").instance(0))}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.FindsByAndroidUIAutomator.findElementByAndroidUIAutomator(FindsByAndroidUIAutomator.java:38)
at com.appium.commonutils.Base.scrolltoElement(Base.java:257)
at com.appium.bussinessLogic.SK_SettingsBL.SelectEventOption(SK_SettingsBL.java:33)
at com.appium.DeviceScripts.SK_VideoLocation_Incident.Login(SK_VideoLocation_Incident.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="SKIP" signature="verifyPhotoAudioIncident()[pri:0, instance:com.appium.DeviceScripts.SK_VideoLocation_Incident@12f41634]" name="verifyPhotoAudioIncident" duration-ms="0" started-at="2020-08-04T12:30:09Z" finished-at="2020-08-04T12:30:09Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: f4b7e9cb-0fca-4939-adfc-a35b9d00cf1e
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains("Event Options").instance(0))}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8200
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: f4b7e9cb-0fca-4939-adfc-a35b9d00cf1e
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains("Event Options").instance(0))}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.FindsByAndroidUIAutomator.findElementByAndroidUIAutomator(FindsByAndroidUIAutomator.java:38)
at com.appium.commonutils.Base.scrolltoElement(Base.java:257)
at com.appium.bussinessLogic.SK_SettingsBL.SelectEventOption(SK_SettingsBL.java:33)
at com.appium.DeviceScripts.SK_VideoLocation_Incident.Login(SK_VideoLocation_Incident.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPhotoAudioIncident -->
        <test-method status="SKIP" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_VideoLocation_Incident@12f41634]" name="CloseApp" is-config="true" duration-ms="0" started-at="2020-08-04T12:30:09Z" finished-at="2020-08-04T12:30:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_VideoLocation_Incident -->
    </test> <!-- SK_VideoLocation_Incident -->
    <test name="SK_Maps" duration-ms="128721" started-at="2020-08-04T12:30:09Z" finished-at="2020-08-04T12:32:18Z">
      <class name="com.appium.DeviceScripts.SK_Maps">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_Maps@a38d7a3]" name="launchSafetyKuvrr" is-config="true" duration-ms="34922" started-at="2020-08-04T12:30:09Z" finished-at="2020-08-04T12:30:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="VerifyAllMap()[pri:1, instance:com.appium.DeviceScripts.SK_Maps@a38d7a3]" name="VerifyAllMap" duration-ms="93612" started-at="2020-08-04T12:30:44Z" finished-at="2020-08-04T12:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAllMap -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_Maps@a38d7a3]" name="CloseApp" is-config="true" duration-ms="184" started-at="2020-08-04T12:32:18Z" finished-at="2020-08-04T12:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_Maps -->
    </test> <!-- SK_Maps -->
    <test name="SK_SteerpathMAP" duration-ms="108785" started-at="2020-08-04T12:32:18Z" finished-at="2020-08-04T12:34:07Z">
      <class name="com.appium.DeviceScripts.SK_SteerpathMAP">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_SteerpathMAP@1060b431]" name="launchSafetyKuvrr" is-config="true" duration-ms="14407" started-at="2020-08-04T12:32:18Z" finished-at="2020-08-04T12:32:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="FAIL" signature="testSteerPathMap()[pri:1, instance:com.appium.DeviceScripts.SK_SteerpathMAP@1060b431]" name="testSteerPathMap" duration-ms="94187" started-at="2020-08-04T12:32:32Z" finished-at="2020-08-04T12:34:07Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8201
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 78f4e5a9-f988-4d73-ab1c-72d966921f94
*** Element info: {Using=id, value=com.safety.armourgrid:id/feature_title}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: connect ECONNREFUSED 127.0.0.1:8201
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 78f4e5a9-f988-4d73-ab1c-72d966921f94
*** Element info: {Using=id, value=com.safety.armourgrid:id/feature_title}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:353)
at io.appium.java_client.DefaultGenericMobileDriver.findElements(DefaultGenericMobileDriver.java:54)
at io.appium.java_client.AppiumDriver.findElements(AppiumDriver.java:152)
at org.openqa.selenium.remote.RemoteWebDriver.findElementsById(RemoteWebDriver.java:376)
at io.appium.java_client.DefaultGenericMobileDriver.findElementsById(DefaultGenericMobileDriver.java:66)
at io.appium.java_client.AppiumDriver.findElementsById(AppiumDriver.java:156)
at org.openqa.selenium.By$ById.findElements(By.java:180)
at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:311)
at io.appium.java_client.DefaultGenericMobileDriver.findElements(DefaultGenericMobileDriver.java:50)
at io.appium.java_client.AppiumDriver.findElements(AppiumDriver.java:148)
at com.appium.pageobject.SK_MAP_PO.roomList(SK_MAP_PO.java:82)
at com.appium.bussinessLogic.SK_MapBL.getPOIList(SK_MapBL.java:100)
at com.appium.DeviceScripts.SK_SteerpathMAP.testSteerPathMap(SK_SteerpathMAP.java:65)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSteerPathMap -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_SteerpathMAP@1060b431]" name="CloseApp" is-config="true" duration-ms="185" started-at="2020-08-04T12:34:07Z" finished-at="2020-08-04T12:34:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_SteerpathMAP -->
    </test> <!-- SK_SteerpathMAP -->
    <test name="SK_MySurveys" duration-ms="205962" started-at="2020-08-04T12:34:07Z" finished-at="2020-08-04T12:37:33Z">
      <class name="com.appium.DeviceScripts.SK_MySurveys">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_MySurveys@757942a1]" name="launchSafetyKuvrr" is-config="true" duration-ms="13633" started-at="2020-08-04T12:34:07Z" finished-at="2020-08-04T12:34:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="testERP()[pri:1, instance:com.appium.DeviceScripts.SK_MySurveys@757942a1]" name="testERP" duration-ms="126416" started-at="2020-08-04T12:34:20Z" finished-at="2020-08-04T12:36:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testERP -->
        <test-method status="FAIL" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_MySurveys@757942a1]" name="CloseApp" is-config="true" duration-ms="65905" started-at="2020-08-04T12:36:27Z" finished-at="2020-08-04T12:37:33Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 280c4cb6-9c5a-454a-a27f-f82ac218e07f
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains("Logout").instance(0))}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 280c4cb6-9c5a-454a-a27f-f82ac218e07f
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains("Logout").instance(0))}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.FindsByAndroidUIAutomator.findElementByAndroidUIAutomator(FindsByAndroidUIAutomator.java:38)
at com.appium.commonutils.Base.scrolltoElement(Base.java:257)
at com.appium.bussinessLogic.SK_SettingsBL.selectOptionLogOut(SK_SettingsBL.java:12)
at com.appium.DeviceScripts.SK_MySurveys.CloseApp(SK_MySurveys.java:81)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_MySurveys -->
    </test> <!-- SK_MySurveys -->
    <test name="SK_MyHistory" duration-ms="52542" started-at="2020-08-04T12:37:33Z" finished-at="2020-08-04T12:38:25Z">
      <class name="com.appium.DeviceScripts.SK_MyHistory">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_MyHistory@192d3247]" name="launchSafetyKuvrr" is-config="true" duration-ms="12295" started-at="2020-08-04T12:37:33Z" finished-at="2020-08-04T12:37:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="testERP()[pri:1, instance:com.appium.DeviceScripts.SK_MyHistory@192d3247]" name="testERP" duration-ms="39956" started-at="2020-08-04T12:37:45Z" finished-at="2020-08-04T12:38:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testERP -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_MyHistory@192d3247]" name="CloseApp" is-config="true" duration-ms="285" started-at="2020-08-04T12:38:25Z" finished-at="2020-08-04T12:38:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_MyHistory -->
    </test> <!-- SK_MyHistory -->
    <test name="SK_ERP" duration-ms="116149" started-at="2020-08-04T12:38:25Z" finished-at="2020-08-04T12:40:21Z">
      <class name="com.appium.DeviceScripts.SK_ERP">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_ERP@5891e32e]" name="launchSafetyKuvrr" is-config="true" duration-ms="11910" started-at="2020-08-04T12:38:25Z" finished-at="2020-08-04T12:38:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="testERP()[pri:1, instance:com.appium.DeviceScripts.SK_ERP@5891e32e]" name="testERP" duration-ms="103939" started-at="2020-08-04T12:38:37Z" finished-at="2020-08-04T12:40:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testERP -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_ERP@5891e32e]" name="CloseApp" is-config="true" duration-ms="281" started-at="2020-08-04T12:40:21Z" finished-at="2020-08-04T12:40:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_ERP -->
    </test> <!-- SK_ERP -->
    <test name="SK_VisitorManagement" duration-ms="81845" started-at="2020-08-04T12:40:22Z" finished-at="2020-08-04T12:41:43Z">
      <class name="com.appium.DeviceScripts.SK_VisitorManagement">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_VisitorManagement@13eb8acf]" name="launchSafetyKuvrr" is-config="true" duration-ms="11856" started-at="2020-08-04T12:40:22Z" finished-at="2020-08-04T12:40:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="testERP()[pri:1, instance:com.appium.DeviceScripts.SK_VisitorManagement@13eb8acf]" name="testERP" duration-ms="69726" started-at="2020-08-04T12:40:33Z" finished-at="2020-08-04T12:41:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testERP -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_VisitorManagement@13eb8acf]" name="CloseApp" is-config="true" duration-ms="263" started-at="2020-08-04T12:41:43Z" finished-at="2020-08-04T12:41:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_VisitorManagement -->
    </test> <!-- SK_VisitorManagement -->
    <test name="SK_SendNotification" duration-ms="35840" started-at="2020-08-04T12:41:43Z" finished-at="2020-08-04T12:42:19Z">
      <class name="com.appium.DeviceScripts.SK_SendNotification">
        <test-method status="PASS" signature="launchApp()[pri:0, instance:com.appium.DeviceScripts.SK_SendNotification@17d0685f]" name="launchApp" is-config="true" duration-ms="11925" started-at="2020-08-04T12:41:43Z" finished-at="2020-08-04T12:41:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="Profile()[pri:0, instance:com.appium.DeviceScripts.SK_SendNotification@17d0685f]" name="Profile" duration-ms="23749" started-at="2020-08-04T12:41:55Z" finished-at="2020-08-04T12:42:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Profile -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_SendNotification@17d0685f]" name="CloseApp" is-config="true" duration-ms="166" started-at="2020-08-04T12:42:19Z" finished-at="2020-08-04T12:42:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_SendNotification -->
    </test> <!-- SK_SendNotification -->
    <test name="SK_EditProfile" duration-ms="109060" started-at="2020-08-04T12:42:19Z" finished-at="2020-08-04T12:44:08Z">
      <class name="com.appium.DeviceScripts.SK_EditProfile">
        <test-method status="PASS" signature="launchApp()[pri:0, instance:com.appium.DeviceScripts.SK_EditProfile@4fb64261]" name="launchApp" is-config="true" duration-ms="11448" started-at="2020-08-04T12:42:19Z" finished-at="2020-08-04T12:42:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="setting()[pri:0, instance:com.appium.DeviceScripts.SK_EditProfile@4fb64261]" name="setting" is-config="true" duration-ms="15001" started-at="2020-08-04T12:42:31Z" finished-at="2020-08-04T12:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setting -->
        <test-method status="PASS" signature="Profile()[pri:0, instance:com.appium.DeviceScripts.SK_EditProfile@4fb64261]" name="Profile" duration-ms="82457" started-at="2020-08-04T12:42:46Z" finished-at="2020-08-04T12:44:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Profile -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_EditProfile@4fb64261]" name="CloseApp" is-config="true" duration-ms="154" started-at="2020-08-04T12:44:08Z" finished-at="2020-08-04T12:44:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_EditProfile -->
    </test> <!-- SK_EditProfile -->
    <test name="SK_Organization" duration-ms="48750" started-at="2020-08-04T12:44:08Z" finished-at="2020-08-04T12:44:57Z">
      <class name="com.appium.DeviceScripts.SK_Organization">
        <test-method status="PASS" signature="launchApp()[pri:0, instance:com.appium.DeviceScripts.SK_Organization@150c158]" name="launchApp" is-config="true" duration-ms="10954" started-at="2020-08-04T12:44:08Z" finished-at="2020-08-04T12:44:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="Profile()[pri:0, instance:com.appium.DeviceScripts.SK_Organization@150c158]" name="Profile" duration-ms="37547" started-at="2020-08-04T12:44:19Z" finished-at="2020-08-04T12:44:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Profile -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_Organization@150c158]" name="CloseApp" is-config="true" duration-ms="248" started-at="2020-08-04T12:44:57Z" finished-at="2020-08-04T12:44:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_Organization -->
    </test> <!-- SK_Organization -->
    <test name="SK_911_Incident" duration-ms="30889" started-at="2020-08-04T12:44:57Z" finished-at="2020-08-04T12:45:28Z">
      <class name="com.appium.DeviceScripts.SK_911_Incident">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_911_Incident@706a04ae]" name="launchSafetyKuvrr" is-config="true" duration-ms="11974" started-at="2020-08-04T12:44:57Z" finished-at="2020-08-04T12:45:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="test911Incident()[pri:1, instance:com.appium.DeviceScripts.SK_911_Incident@706a04ae]" name="test911Incident" duration-ms="18576" started-at="2020-08-04T12:45:09Z" finished-at="2020-08-04T12:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test911Incident -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_911_Incident@706a04ae]" name="CloseApp" is-config="true" duration-ms="336" started-at="2020-08-04T12:45:28Z" finished-at="2020-08-04T12:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_911_Incident -->
    </test> <!-- SK_911_Incident -->
    <test name="SK_Tips_Anonymous" duration-ms="163340" started-at="2020-08-04T12:45:28Z" finished-at="2020-08-04T12:48:11Z">
      <class name="com.appium.DeviceScripts.SK_Tips_Anonymous">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_Tips_Anonymous@710726a3]" name="launchSafetyKuvrr" is-config="true" duration-ms="12222" started-at="2020-08-04T12:45:28Z" finished-at="2020-08-04T12:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="PASS" signature="testTips()[pri:0, instance:com.appium.DeviceScripts.SK_Tips_Anonymous@710726a3]" name="testTips" duration-ms="150803" started-at="2020-08-04T12:45:40Z" finished-at="2020-08-04T12:48:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTips -->
        <test-method status="PASS" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_Tips_Anonymous@710726a3]" name="CloseApp" is-config="true" duration-ms="305" started-at="2020-08-04T12:48:11Z" finished-at="2020-08-04T12:48:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_Tips_Anonymous -->
    </test> <!-- SK_Tips_Anonymous -->
    <test name="SK_Timer_Incident" duration-ms="14220" started-at="2020-08-04T12:48:11Z" finished-at="2020-08-04T12:48:26Z">
      <class name="com.appium.DeviceScripts.SK_Timer_Incident">
        <test-method status="PASS" signature="launchSafetyKuvrr()[pri:0, instance:com.appium.DeviceScripts.SK_Timer_Incident@2f0a87b3]" name="launchSafetyKuvrr" is-config="true" duration-ms="12065" started-at="2020-08-04T12:48:11Z" finished-at="2020-08-04T12:48:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchSafetyKuvrr -->
        <test-method status="FAIL" signature="loginApp()[pri:0, instance:com.appium.DeviceScripts.SK_Timer_Incident@2f0a87b3]" name="loginApp" is-config="true" duration-ms="2145" started-at="2020-08-04T12:48:23Z" finished-at="2020-08-04T12:48:26Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: socket hang up
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 7f1d8aa2-3c44-49f9-a72a-2589bc9fe422
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains("Event Options").instance(0))}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: socket hang up
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 7f1d8aa2-3c44-49f9-a72a-2589bc9fe422
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains("Event Options").instance(0))}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.FindsByAndroidUIAutomator.findElementByAndroidUIAutomator(FindsByAndroidUIAutomator.java:38)
at com.appium.commonutils.Base.scrolltoElement(Base.java:257)
at com.appium.bussinessLogic.SK_SettingsBL.SelectEventOption(SK_SettingsBL.java:33)
at com.appium.DeviceScripts.SK_Timer_Incident.loginApp(SK_Timer_Incident.java:65)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApp -->
        <test-method status="SKIP" signature="testTimerIncident()[pri:0, instance:com.appium.DeviceScripts.SK_Timer_Incident@2f0a87b3]" name="testTimerIncident" duration-ms="0" started-at="2020-08-04T12:48:26Z" finished-at="2020-08-04T12:48:26Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: socket hang up
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 7f1d8aa2-3c44-49f9-a72a-2589bc9fe422
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains("Event Options").instance(0))}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: socket hang up
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHANDAN', ip: '192.168.42.13', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.safety.armourgrid.DeepL..., appPackage: com.safety.armourgrid, automationName: UiAutomator2, deviceName: Moto G4Plus, newCommandTimeout: 600, noReset: true, platformName: android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, udid: ZY223QKSQB, useJSONSource: true}, deviceApiLevel: 27, deviceManufacturer: motorola, deviceModel: Moto G (4), deviceName: ZY223QKSQB, deviceScreenDensity: 480, deviceScreenSize: 1080x1920, deviceUDID: ZY223QKSQB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 600, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 8.1.0, simpleIsVisibleCheck: true, statBarHeight: 72, takesScreenshot: true, udid: ZY223QKSQB, useJSONSource: true, viewportRect: {height: 1704, left: 0, top: 72, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 7f1d8aa2-3c44-49f9-a72a-2589bc9fe422
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains("Event Options").instance(0))}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.FindsByAndroidUIAutomator.findElementByAndroidUIAutomator(FindsByAndroidUIAutomator.java:38)
at com.appium.commonutils.Base.scrolltoElement(Base.java:257)
at com.appium.bussinessLogic.SK_SettingsBL.SelectEventOption(SK_SettingsBL.java:33)
at com.appium.DeviceScripts.SK_Timer_Incident.loginApp(SK_Timer_Incident.java:65)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTimerIncident -->
        <test-method status="SKIP" signature="CloseApp()[pri:0, instance:com.appium.DeviceScripts.SK_Timer_Incident@2f0a87b3]" name="CloseApp" is-config="true" duration-ms="0" started-at="2020-08-04T12:48:26Z" finished-at="2020-08-04T12:48:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
      </class> <!-- com.appium.DeviceScripts.SK_Timer_Incident -->
    </test> <!-- SK_Timer_Incident -->
  </suite> <!-- Suite -->
</testng-results>
